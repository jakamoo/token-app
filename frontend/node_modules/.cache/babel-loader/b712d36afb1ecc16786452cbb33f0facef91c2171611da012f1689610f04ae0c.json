{"ast":null,"code":"var _jsxFileName = \"/Users/jakamo/Desktop/akirolabs/frontend/src/components/TokenGenerator.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { isValidInput } from './ValidationUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TokenGenerator() {\n  _s();\n  const [availableDigitsString, setAvailableDigitsString] = useState('');\n  const [token, setToken] = useState(null);\n  const [error, setError] = useState(null);\n\n  // This function abstracts away the API call.\n  const fetchToken = async digits => {\n    const response = await axios.post('http://localhost:8180/generateToken', digits);\n    if (response.data && response.data.token) {\n      return response.data.token;\n    }\n    throw new Error('Unexpected response format from the server.');\n  };\n  const handleGenerateToken = async () => {\n    try {\n      const availableDigits = availableDigitsString.split(',').map(num => parseInt(num.trim()));\n      const generatedToken = await fetchToken(availableDigits);\n      setToken(generatedToken);\n      setError(null);\n    } catch (error) {\n      // Ensure a default error message if none is provided\n      const errorMessage = error.message || 'An error occurred while generating the token.';\n      setError(errorMessage);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Token Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Available Digits (comma separated):\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: availableDigitsString,\n          onChange: e => setAvailableDigitsString(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleGenerateToken,\n        children: \"Generate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), token && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Generated Token: \", token]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red'\n      },\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(TokenGenerator, \"yRBlTFFz+dE6pRT+6KHx2CzTv88=\");\n_c = TokenGenerator;\nexport default TokenGenerator;\nvar _c;\n$RefreshReg$(_c, \"TokenGenerator\");","map":{"version":3,"names":["React","useState","axios","isValidInput","jsxDEV","_jsxDEV","TokenGenerator","_s","availableDigitsString","setAvailableDigitsString","token","setToken","error","setError","fetchToken","digits","response","post","data","Error","handleGenerateToken","availableDigits","split","map","num","parseInt","trim","generatedToken","errorMessage","message","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","style","color","_c","$RefreshReg$"],"sources":["/Users/jakamo/Desktop/akirolabs/frontend/src/components/TokenGenerator.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport { isValidInput } from './ValidationUtils';  \n\nfunction TokenGenerator() {\n  const [availableDigitsString, setAvailableDigitsString] = useState('');\n  const [token, setToken] = useState(null);\n  const [error, setError] = useState(null);\n\n\n\n  // This function abstracts away the API call.\nconst fetchToken = async (digits) => {\n  const response = await axios.post('http://localhost:8180/generateToken', digits);\n  \n  if (response.data && response.data.token) {\n    return response.data.token;\n  }\n  \n  throw new Error('Unexpected response format from the server.');\n}\n\nconst handleGenerateToken = async () => {\n  try {\n    const availableDigits = availableDigitsString.split(',').map(num => parseInt(num.trim()));\n    const generatedToken = await fetchToken(availableDigits);\n    \n    setToken(generatedToken);\n    setError(null);\n  } catch (error) {\n    // Ensure a default error message if none is provided\n    const errorMessage = error.message || 'An error occurred while generating the token.';\n    setError(errorMessage);\n  }\n};\n\n\n  return (\n    <div>\n      <h2>Token Generator</h2>\n      <div>\n        <label>\n          Available Digits (comma separated):\n          <input\n            type=\"text\"\n            value={availableDigitsString}\n            onChange={(e) => setAvailableDigitsString(e.target.value)}\n          />\n        </label>\n        <button onClick={handleGenerateToken}>Generate</button>\n      </div>\n      {token && <div>Generated Token: {token}</div>}\n      {error && <div style={{ color: 'red' }}>Error: {error}</div>}\n    </div>\n  );\n}\n\nexport default TokenGenerator;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}