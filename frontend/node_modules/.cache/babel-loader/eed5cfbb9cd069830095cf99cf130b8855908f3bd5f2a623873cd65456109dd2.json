{"ast":null,"code":"// validationUtils.js\n\n/**\n * Validates if the input string contains only single-digit numbers separated by commas.\n *\n * @param {string} input - The input string to be validated.\n * @returns {boolean} - True if the input is valid, otherwise false.\n */\nexport const isValidInput = input => {\n  const regex = /^([0-9](,|$))+$/;\n  return input.trim() !== '' && regex.test(input);\n};","map":{"version":3,"names":["isValidInput","input","regex","trim","test"],"sources":["/Users/jakamo/Desktop/akirolabs/frontend/src/utils/ValidationUtils.js"],"sourcesContent":["// validationUtils.js\n\n/**\n * Validates if the input string contains only single-digit numbers separated by commas.\n *\n * @param {string} input - The input string to be validated.\n * @returns {boolean} - True if the input is valid, otherwise false.\n */\nexport const isValidInput = (input) => {\n    const regex = /^([0-9](,|$))+$/;\n    return input.trim() !== '' && regex.test(input);\n  };"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMA,YAAY,GAAIC,KAAK,IAAK;EACnC,MAAMC,KAAK,GAAG,iBAAiB;EAC/B,OAAOD,KAAK,CAACE,IAAI,CAAC,CAAC,KAAK,EAAE,IAAID,KAAK,CAACE,IAAI,CAACH,KAAK,CAAC;AACjD,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}